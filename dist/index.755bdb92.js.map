{"mappings":"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","sources":["src/dom.js"],"sourcesContent":["window.dom = {\r\n    //创建标签\r\n    create(string){\r\n        const container = document.createElement(\"template\");\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },\r\n\r\n    //在后面加标签\r\n    after(node,node2) {\r\n        node.parentNode.insertBefore(node2,node.nextSibling);\r\n    },\r\n    //在前面加标签\r\n    before(node,node2){\r\n        node.parentNode.insertBefore(node2,node);\r\n    },\r\n\r\n    //在节点里加儿子\r\n    append(parent,node){\r\n        parent.appendChild(node)\r\n    },\r\n\r\n    //在节点外加爸爸\r\n    wrap(node,parent){\r\n        dom.before(node,parent);\r\n        dom.after(parent,node);\r\n    },\r\n\r\n    //删除一个节点\r\n    remove(node){\r\n        node.parentNode.removeChild(node);\r\n        return node;\r\n    },\r\n\r\n    //删除一个节点中的所有儿子\r\n    empty(node){\r\n        const {childNodes} = node ;\r\n        //相当于 const childNodes = node.childNodes;\r\n        const array=[];\r\n        let x = node.firstChild;\r\n        while(x){\r\n            array.push(dom.remove(node.firstChild));\r\n            x = node.firstChild;\r\n        }\r\n        return array;\r\n    },\r\n\r\n    //用于读写属性\r\n    attr(node,name,value){\r\n        if(arguments.length === 3){\r\n            node.setAttribute(name,value);\r\n        }else if(arguments.length === 2){\r\n            return node.getAttribute(name);\r\n        }\r\n    },\r\n\r\n    //在节点内写文本\r\n    text(node,string){//适配\r\n        if(arguments.length === 2){\r\n            if('innerText' in node){\r\n                node.innerText = string; //ie\r\n            }else{\r\n                node.textContent = string;//其他\r\n            }\r\n        }else if(arguments.length === 1){\r\n            if('innerText' in node){\r\n                return node.innerText; //ie\r\n            }else{\r\n                return node.textContent;//其他\r\n            }\r\n        }\r\n        \r\n    },\r\n\r\n    //读写html文本，包括html标签\r\n    html(node ,string){\r\n        if(arguments.length === 2){\r\n            node.innerHTML = string;\r\n        }else if(arguments.length){\r\n            return node.innerHTML;\r\n        }\r\n    },\r\n\r\n    //写style内容\r\n    style(node ,name ,value ){\r\n        if(arguments.length === 3){\r\n            node.style[name]=value;\r\n        }else if(arguments === 2){\r\n            if(typeof name === 'string'){\r\n                return node.style[name];\r\n            }else if(name instanceof Object){\r\n                const object = name;\r\n                for(let key in object){\r\n                    node.style[key] = object[key];\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    //增删class\r\n    class:{\r\n        add(node,className){\r\n            node.classList.add(className);\r\n        },\r\n        remove(node,className){\r\n            node.classList.remove(className);\r\n        },\r\n        has(node, className){\r\n            return node.classList.contains(className);\r\n        }\r\n    },\r\n\r\n    //添加事件\r\n    on(node,eventName,fn){\r\n        node.addEventListener(eventName,fn);\r\n    },\r\n    off(node,eventName,fn){\r\n        node.removeEventListener(eventName,fn);\r\n    },\r\n    \r\n    //获取节点\r\n    find(selector, scope){\r\n        return (scope || document).querySelectorAll(selector);\r\n    },\r\n\r\n    //获取父节点\r\n    parent(node){\r\n        return node.parentNode;\r\n    },\r\n    //获取子节点\r\n    children(node){\r\n        return node.children;\r\n    },\r\n    //获取兄弟节点\r\n    siblings(node){\r\n        return Array.from(node.parentNode.children)\r\n        .filter(n => n!== node)\r\n    },\r\n    //获取弟弟节点\r\n    next(node){\r\n        let x = node.nextSibling;\r\n        while(x && x.nodeType === 3){\r\n            x = x.nextSibling;\r\n        }\r\n        return x;\r\n    },\r\n    //获取哥哥节点\r\n    previous(node){\r\n        let x = node.previousSibling;\r\n        while(x && x.nodeType === 3){\r\n            x = x.previousSibling;\r\n        }\r\n        return x;\r\n    },\r\n    //遍历所有节点\r\n    each(nodeList,fn){\r\n        for(let i=0;i<nodeList.length;i++){\r\n            fn.call(null,nodeList[i]);\r\n        }\r\n    },\r\n    //用于获取一个节点排行多少\r\n    index(node){\r\n        const list = dom.children(node.parentNode);\r\n        let i;\r\n        for(i = 0 ;i<list.length;i++){\r\n            if(list[i] === node){\r\n                break;\r\n            }\r\n        }\r\n        return i\r\n    },\r\n\r\n};\r\n\r\n\r\n"],"names":[],"version":3,"file":"index.755bdb92.js.map","sourceRoot":"/__parcel_source_root/"}